- name: Deploy FastAPI API from GitHub raw file
  hosts: all   # or your group from generated_inventory.ini
  become: yes
  vars:
    app_user: ec2-user
    app_dir: /home/ec2-user/opt/inventory_api
    requirements_path: /opt/inventory_api/requirements.txt
    db_url: "postgresql://{{ lookup('env', 'DB_USER') }}:{{ lookup('env', 'DB_PASS') }}@prod-rmm-db.cluster-c0rcwo8m2en7.us-east-1.rds.amazonaws.com/rmm"

    main_py_url: "https://raw.githubusercontent.com/CalebPCB/Coding_Projects/main/RMM_Project/api/main.py"

  tasks:
    - name: Ensure python3-pip is installed
      package:
        name: python3-pip
        state: present

    - name: Install virtualenv using pip3
      pip:
        name: virtualenv
        executable: pip3
        state: present

    - name: Ensure application directory exists
      file:
        path: /opt/inventory_api
        state: directory
        owner: ec2-user
        group: ec2-user
        mode: '0755'

    - name: Copy requirements.txt to remote server
      copy:
        src: /home/ubuntu/rmm-deploy/requirements.txt   # on control machine
        dest: /opt/inventory_api/requirements.txt        # on remote host
        owner: ec2-user                                   # or your app_user if you created it
        group: ec2-user
        mode: '0644'

    - name: Install dependencies from requirements.txt on remote
      pip:
        requirements: /opt/inventory_api/requirements.txt
        virtualenv: /opt/inventory_api/venv

    - name: Ensure system packages are installed (Amazon Linux 2023)
      dnf:
        name:
          - python3
          - python3-pip
          - python3-virtualenv
          - postgresql-devel   # equivalent of libpq-dev
          - screen
        state: present
        update_cache: yes

    - name: Create app directory
      file:
        path: "{{ app_dir }}"
        state: directory
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0755'

    - name: Download main.py from GitHub
      get_url:
        url: "{{ main_py_url }}"
        dest: "{{ app_dir }}/main.py"
        mode: '0644'
        owner: "{{ app_user }}"
        group: "{{ app_user }}"

    - name: Create Python virtual environment
      command: python3 -m venv {{ app_dir }}/venv
      args:
        creates: "{{ app_dir }}/venv"

    - name: Install dependencies from local requirements.txt
      pip:
        requirements: "{{ requirements_path }}"
        virtualenv: "{{ app_dir }}/venv"

    - name: Create .env file with DB URL
      copy:
        dest: "{{ app_dir }}/.env"
        content: |
          DATABASE_URL={{ db_url }}
        owner: "{{ app_user }}"
        group: "{{ app_user }}"
        mode: '0644'

    - name: Start FastAPI server in detached screen session
      shell: |
        screen -dmS inventory_api bash -c 'cd {{ app_dir }} && source venv/bin/activate && uvicorn main:app --host 0.0.0.0 --port 8000'
      args:
        executable: /bin/bash
